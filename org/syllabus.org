#+title: Introduction to Programming with Python
#+author: Marcus Birkenkrahe (birkenkrahe@lyon.edu)
#+subtitle: Lyon College, Summer term I 2023, CSC 109
#+subtitle: Derby Science Center Room 209, Mon-Fri 1pm-3pm
#+startup: overview hideblocks inlineimages indent
#+options: toc:nil num:nil
* Overview

This four-week course is designed to provide students with a
comprehensive introduction to programming in Python, covering
fundamental concepts and practical applications of the language.

* Objectives

Students will learn how to install Python and an IDE, and get started
with basic data types, control flow statements, functions, files, and
exceptions. They will also gain hands-on experience with more advanced
topics such as object-oriented programming, modules and packages,
testing and debugging, and data analysis and visualization.

Throughout the course, students will have ample opportunity to
practice their programming skills with a variety of exercises and
projects using the Google Colaboratory and DataCamp platforms. They
will also receive guidance and feedback from the instructor on their
progress and final projects.

By the end of the course, students should have a solid foundation in
Python programming and be able to apply their skills to a wide range
of projects, from game development to process automation, data
analysis and visualization. This course is ideal for anyone with
little or no programming experience who wants to learn Python or for
those who have some experience in programming and want to learn more
advanced concepts and practical applications.

* Course requirements

- Formal prerequisite MTH 101 (College Algebra)
- No prior knowledge required
- Curiosity is essential
- Experience with computers is useful but not critical

* Grading system

You should be able to see your current grade at any time using the
Canvas gradebook for the course.

| REQUIREMENT             | UNITS | PPU | TOTAL | % of TOTAL |
|-------------------------+-------+-----+-------+------------|
| Programming assignments |     4 |  25 |   100 |        25. |
| Class participation     |    20 |   5 |   100 |        25. |
| Multiple-choice tests   |     4 |  25 |   100 |        25. |
| Capstone project        |     1 | 100 |   100 |        25. |
|-------------------------+-------+-----+-------+------------|
| TOTAL                   |       |     |   400 |       100. |
|-------------------------+-------+-----+-------+------------|
#+TBLFM: @2$4=$2*$3::@2$5=(@2$4/@6$4)*100::@3$4=$2*$3::@3$5=(@3$4/@6$4)*100::@4$4=$2*$3::@4$5=(@4$4/@6$4)*100::@5$4=$2*$3::@5$5=(@5$4/@6$4)*100::@6$4=vsum(@2..@5)::@6$5=vsum(@2..@5)

* Grading table

This table is used to convert completion rates into letter grades.

|--------+---------------------------|
|      *%* | *Letter Grade*              |
|--------+---------------------------|
| 100-98 |                           |
|  97-96 | A (passed - very good)    |
|  95-90 |                           |
|--------+---------------------------|
|  89-86 |                           |
|  85-80 | B (passed - good)         |
|  79-76 |                           |
|--------+---------------------------|
|  75-70 |                           |
|  69-66 | C (passed - satisfactory) |
|  65-60 |                           |
|--------+---------------------------|
|  59-56 |                           |
|  55-50 | D (passed)                |
|--------+---------------------------|
|   49-0 | F (failed)                |
|--------+---------------------------|

* Tentative schedule and session content

For *important dates*, see the 2022-2023 Academic Calendar at:
[[https://catalog.lyon.edu/202223-academic-calendar][catalog.lyon.edu/202223-academic-calendar]]

** Python basics - language and infrastructure
- What programming is good for
- Downloading, installing and running Python
- Interactive notebooks

** First program - input and output
- Printing stuff
- Getting input
- Built-in string functions

** Flow control - if, else, and elif statements
- Flow charts and flow control concepts
- If, Else, and Elif statements
- BPMN

** Flow control - while and for loops
- While loops
- For loops

** Functions
- Built-in functions
- Writing your own functions
- Global and local scope

** Handling errors
- try and except statement
- exceptions

** Writing a complete program: Guess the number
- Pseudocode
- Coding
- Testing
  
** Lists
- List data type
- For loops with lists, multiple assignment and augmented operators
- List methods
- Similarities between lists and strings

** Dictionaries
 - Dictionary data type
 - Data structures
   
** More about strings
- Advanced string syntax
- String methods
- String formatting
  
** Regular expressions
- Regex groups and the pipe character
- Character classes and methods
- Regex example program: phone and email scraper

** Files
- Filenames and absolute/relative paths
- Reading and writing plaintext files
- Copying and moving files and folders
- Deleting files
- Walking a directory tree

** Debugging
- Raise and assert statements
- Logging data
- Using the debugger

** Web scraping
- The webbrowser module
- Downloading with Requests
- Parsing HTML with Beautiful Soup
- Controlling the browser with Selenium

** Excel, Word, and PDF documents
- Reading Excel spreadsheets
- Editing Excel spreadsheets
- Reading and editing PDFs
- Reading and editing Word documents

** Working with tabular data and pandas
- Loading, inspecting data frames
- Selecting columns and rows
- Logical testing

** GUI Automation
- Controlling the mouse from Python
- Controlling the keyboard from Python
- Screenshots and image recognition
  
** Data visualization with Python
- Creating line plots and adding text
- Scatter plots and bar charts
- Histograms

** Project presentations

* Standard and course policies

- *Standard Lyon College Policies* are incorporated into this syllabus
  and can be found at: [[http://www.lyon.edu/standard-course-policies][lyon.edu/standard-course-policies]].

- The *Assignments and Honor Code* and the *Attendance Policy* are
  incorporated into this syllabus also and can be found at:
  [[https://tinyurl.com/LyonPolicy][tinyurl.com/LyonPolicy]].

* DataCamp

The course includes a free subscription to the DataCamp classroom at
[[https://datacamp.com/][datacamp.com]] for further study, and for the opportunity to earn a
certificate for the course ~Introduction to Data Science in Python~.

* Google Colaboratory

Google Colab ([[https://colab.research.google.com/][colab.research.google.com/]]) is a (free) online platform
to create, edit and run interactive notebooks in R or Python. This
enables students to learn literate programming techniques. All
code-along and practice exercises for this class will be on Google
Colab.

* GitHub

All course materials are available as ~ipynb~, ~org~ and ~pdf~ files in a
GitHub repository ([[https://github.com/birkenkrahe/py][github.com/birkenkrahe/py]]). GitHub is the worldwide
largest online platform for software development.

* Textbooks

This is a selection of text books and sources used to prepare this
course, which was first offered in summer 2023. Planned to be offered
again: fall 2023/2024 (Batesville High School), summer 2024/2025.

- Automate the Boring Stuff with Python (3e) by A Sweigart (NoStarch,
  2023).
- Introduction to Programming in Python by D Malan (freeCodeCamp,
  2023).
- Introduction to Data Science with Python by H Green-Lerman
  (DataCamp, 2022)
- Invent Your Own Computer Games With Python (4e) by A Sweigart
  (NoStarch, 2023).
- Learn to Code by Solving Prolbems by D Zingaro (NoStarch, 2021).
- Python Crash Course (3e) by E Matthes (NoStarch, 2023).
- Python Workout by R Lerner (Manning, 2020).
- Whirlwind Tour of Python by J VanderPlas (O'Reilly, 2016).

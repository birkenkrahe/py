#+title: Introduction to Programming with Python 
#+author: Marcus Birkenkrahe (birkenkrahe@lyon.edu)
#+subtitle: Lyon College, Summer term I 2023, CSC 109
#+startup: overview hideblocks inlineimages indent
#+options: toc:nil num:nil
This four-week course is designed to provide students with a
comprehensive introduction to programming in Python, covering
fundamental concepts and practical applications of the language. Using
"Python Crash Course" by Eric Matthes as the textbook, students will
learn how to install Python and an IDE, and get started with basic
data types, control flow statements, functions, files, and
exceptions. They will also gain hands-on experience with more advanced
topics such as object-oriented programming, modules and packages,
testing and debugging, and data analysis and visualization.

The second half of the course will focus on game development with the
Pygame library, starting with basic game framework development and
gradually building up to a fully functional "space invaders" game. In
addition, students will learn how to use Matplotlib and Seaborn to
create visualizations for data analysis, and how to use Pandas to
manipulate and analyze data.

Throughout the course, students will have ample opportunity to
practice their programming skills with a variety of exercises and
projects using the Google Colaboratory and DataCamp platforms. They
will also receive guidance and feedback from the instructor on their
progress and final projects. By the end of the course, students should
have a solid foundation in Python programming and be able to apply
their skills to a wide range of projects, from game development to
data analysis and visualization. This course is ideal for anyone with
little or no programming experience who wants to learn Python or for
those who have some experience in programming and want to learn more
advanced concepts and practical applications.

** Week 1
*** Day 1 (2 hours)

- Introductions
- Overview of course and expectations
- Installing Python and IDE (Integrated Development Environment)
- Getting started with Python interpreter and basic data types
*** Day 2 (2 hours)

- Review of Python syntax and data types
- Introduction to control flow statements (if/else, while, for)
- Exercises using control flow statements
*** Day 3 (2 hours)

- Review of control flow statements
- Introduction to functions and parameters
- Exercises using functions and parameters
*** Day 4 (2 hours)

- Review of functions and parameters
- Introduction to files and exceptions
- Exercises using files and exceptions

*** Day 5 (2 hours)

- Review of files and exceptions
- Introduction to lists
- Exercises using lists
** Week 2
*** Day 6 (2 hours)

- Review of lists
- Introduction to dictionaries
- Exercises using dictionaries
*** Day 7 (2 hours)

- Review of dictionaries
- Introduction to tuples
- Exercises using tuples
*** Day 8 (2 hours)

- Review of tuples
- Introduction to classes and objects
- Exercises using classes and objects
*** Day 9 (2 hours)

- Review of classes and objects
- Introduction to inheritance
- Exercises using inheritance
*** Day 10 (2 hours)

- Review of inheritance
- Introduction to modules and packages
- Exercises using modules and packages
** Week 3
*** Day 11 (2 hours)

- Review of modules and packages
- Introduction to testing and debugging
- Exercises using testing and debugging techniques
*** Day 12 (2 hours)

- Review of testing and debugging
- Introduction to data visualization with Python
- Exercises using Matplotlib to create visualizations

*** Day 13 (2 hours)

- Review of data visualization with Python
- Introduction to Pygame library
- Exercises using Pygame to build a basic game framework
*** Day 14 (2 hours)

- Review of Pygame library
- Introduction to game sprites and animation
- Exercises using game sprites and animation to develop a basic game
*** Day 15 (2 hours)

- Review of game development with Pygame
- Introduction to game logic and event handling
- Exercises using game logic and event handling to develop a simple "space invaders" game
** Week 4
*** Day 16 (2 hours)

- Review of "space invaders" game development
- Introduction to debugging and optimization techniques for games
- Exercises using debugging and optimization techniques to improve the
  "space invaders" game
*** Day 17 (2 hours)

- Review of game development with Pygame
- Introduction to advanced data visualization with Python
- Exercises using Seaborn to create more complex visualizations
*** Day 18 (2 hours)

- Review of advanced data visualization with Python
- Introduction to data analysis with Python
- Exercises using Pandas to manipulate and analyze data
*** Day 19 (2 hours)

- Review of data analysis with Python
- Final project development
- Discussion and review of final project progress
*** Day 20 (2 hours)

- Final project presentation
- Review and feedback on final projects

* Standard and course policies

- *Standard Lyon College Policies* are incorporated into this syllabus
  and can be found at: [[http://www.lyon.edu/standard-course-policies][lyon.edu/standard-course-policies]].

- The *Assignments and Honor Code* and the *Attendance Policy* are
  incorporated into this syllabus also and can be found at:
  [[https://tinyurl.com/LyonPolicy][tinyurl.com/LyonPolicy]].
  
* DataCamp

The course includes a free subscription to the DataCamp classroom at
[[https://datacamp.com/][datacamp.com]] for assignments, and the opportunity to earn a
certificate.

* Google Colaboratory

Google Colab ([[https://colab.research.google.com/][colab.research.google.com/]]) is a (free) online platform
to create, edit and run interactive notebooks in R or Python. This
enables students to learn literate programming techniques. All
code-along and practice exercises for this class will be on Google
Colab.

* GitHub

All course materials are available as ~ipynb~, ~org~ and ~pdf~ files in a
GitHub repository ([[https://github.com/birkenkrahe/py][github.com/birkenkrahe/py]]). GitHub is the premier
online platform for software development.


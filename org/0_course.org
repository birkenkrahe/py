#+TITLE:COURSE OVERVIEW
#+AUTHOR: Marcus Birkenkrahe
#+SUBTITLE: CSC 109 - Introduction to programming in Python - Summer 2023
#+STARTUP: overview hideblocks indent
#+attr_latex: :width 400px
[[../img/cover.jpg]]
* Who is your lecturer?
#+attr_latex: :width 400px
#+caption: Photo of Poppy as a puppy
[[../img/monty_python.png]]

- Monty Python used to be one of my favorite shows:
  1) British humor (I went to school in London)
  2) Anarchic and irreverent (I was young once)
  3) MUDs (First online programming class)

* My first programming languages
#+attr_latex: :width 400px
#+caption: Texas Instruments TI-99/4 16-bit microcomputer, 1979
[[../img/0_ti99.jpg]]

- My first programming languages:
  1) BASIC - Beginner's All-purpose Symbolic Instruction Code (1979)
  2) FORTRAN - FORMula TRANslator (1985)
  3) C++ (1989)

- How many programming languages are there today?

* Why Python? Why not?
#+attr_latex: :width 400px
#+caption: Why is Python so popular (Ozgon, 2021)
[[../img/0_why_python.png]]

- Why Python?
  #+begin_quote
  1) Readability and simplicity ~**~
  2) Versatility and applicability ~**~
  3) Large and active community
  4) Cross-platform compatibility
  5) Abundance of libraries and frameworks ~*~
  6) Data science and machine learning ~***~
  7) Automation and scripting ~***~
  8) Career opportunities ~*~
  #+end_quote

- Why not Python?
  #+begin_quote
  1) Specific platform requirements
  2) Performance-critical applications ~***~
  3) One-paradigm language (cp. R, Haskell, C/C++, SQL) ~**~
  4) Industry demand ~*~
  5) You might just not like significant indentation ~*~
  #+end_quote

* Natural vs. programming languages

- C/C++ is like Latin
  #+attr_latex: :width 150px
  #+Caption: "C/C++ is like Latin"
  [[../img/0_cpp.png]]
- SQL is like English
  #+attr_latex: :width 200px
  #+Caption: "SQL is like English"
  [[../img/0_sqlite.png]]

- Lisp is like French
  #+attr_latex: :width 150px
  #+Caption: "Lisp is like French"
  [[../img/0_lisp.png]]

- R is like Italian
  #+attr_latex: :width 150px
  #+Caption: "R is like Italian"
  [[../img/0_rlogo.png]]

- Snap! is like Russian
  #+attr_latex: :width 150px
  #+Caption: "Snap! is like Russian"
  [[../img/0_snap.png]]

- Python is like Spanish
  #+attr_latex: :width 150px
  #+Caption: "Python is like Spanish"
  [[../img/0_python.png]]

- FORTRAN is like Hebrew
  #+attr_latex: :width 150px
  #+Caption: "FORTRAN is like Hebrew"
  [[../img/0_fortran.png]]

- HTML is like Gaelic
  #+attr_latex: :width 150px
  #+Caption: "HTML is like Gaelic"
  [[../img/0_html.jpg]]

* The importance of (understanding) infrastructure
#+attr_latex: :width 400px
#+caption: Photo by Landon Martin on Unsplash
[[../img/0_nesting.jpg]]

Infrastructure that separates you from just getting on with it:

1. Network server / network
2. Keyboard / Screen
3. Operating system (OS)
4. OS shell / terminal / console
5. Python shell / console
6. File system
7. Compiler/interpreter
8. Editor
9. Middleware and meta data
10. Graphical user interface

(Most of these infrastructure components are written in C/C++.)

* What do you expect from this course?
#+attr_latex: :width 400px
#+caption: Dandelion in the grass, by Aaron Burden, @Unsplash
[[../img/0_expectations.jpg]]

[[https://docs.google.com/forms/d/1YItHX4fru4TiNvmzJQDh-DG9t2C69dLQNWw0uIc_vmE/edit#responses][Google Forms survey]]: responses

* What careers do our students have?
#+attr_latex: :width 400px
#+caption: Careers of recent computer and data science graduates from Lyon College
[[../img/0_careers.png]]

* What will you do in this course?
#+attr_latex: :width 400px
+caption: Tad Dickerson (Bob's Flying Service) with AgNav system (Flickr.com)
[[../img/0_course.jpg]]

- Part 1: Basics
  1) Input and Output
  2) Flow control
  3) Functions
  4) Lists and dictionaries

- Part 2: Applications
  1) Strings and regular expressions
  2) Webscraping and file manipulation
  3) Working and visualizing tabular data
  4) Machine learning: spam filter

* How will you be evaluated?
#+attr_latex: :width 400px
#+caption: From the course syllabus (Canvas, GitHub)
[[../img/0_grades.png]]

- All course requirements have deadlines
- Late submissions will be penalized (loss of points)
- No final exam but 4 weekly graded tests
- Programming assignments are home assignments
- In-class practices are "literate programming" exercises
- You are expected to code along 

* Which tools are you going to use?
#+attr_latex: :width 400px
#+caption: Unsplash, workshop
[[../img/0_tools.jpg]]

- [[https://lyon.instructure.com/][Canvas]] (learning management system)

- [[https://github.com/birkenkrahe/cc][GitHub repository]] (all course materials except tests)

- [[https://colab.research.google.com][Google Colaboratory]] (online interative notebook)

- [[https://replit.com][Command line interface]] interpreter - (shell / REPL at replit.com)

- [[https://youtu.be/WIlQukiXs-E][Python Interactive Development Learning Environment]] (IDLE)

- [[https://datacamp.com/][DataCamp]] (data science online learning for Python, R, SQL)

* Static: the Canvas LMS
#+attr_latex: :width 400px
#+caption: Canvas
[[../img/0_canvas.png]]

- Course announcements (notifications via email)
- Assignments for submission and online tests 
- Zoom links (participate remotely/cloud recording)
- Course links (GitHub, GDrive Whiteboard, DataCamp invite link)
- Gradebook (weekly updates)

* Static: the GitHub platform
#+attr_latex: :width 400px
#+caption: My GitHub dashboard - close to 4,000 commits in 2022 (100,000 lines of code?)
[[../img/0_github.png]]

- [[https://github.com/birkenkrahe][GitHub]] is the most popular software development platform.

- It also contains Gists (code snippets), Issues, and CoPilot (AI)

- Here for you: all course materials, and the general course FAQ

* Dynamic: IDLE
* Dynamic: Google Colaboratory
* Dynamic: replit.com
* Dynamic: DataCamp
* When are the first assignments due?
#+attr_latex: :width 400px
#+caption: Four monks by Claudio Rinaldi (1852-1909)
[[../img/0_monks.png]]

First home assignment, first test and in-class assignments are due a
week from now, on Monday, 28 May, by 12 pm (so that I can check 'em).

* TODO What are you looking forward to?
#+attr_latex: :width 400px
[[../img/0_package.jpg]]

* Next / Any questions?
#+attr_latex: :width 200px
#+caption: Introduction to Python Basics
[[../img/0_python.png]]
Python Basics!

* TODO Practice: a first "literate" Python program!
#+attr_latex: :width 400px
#+caption: Books aren't the only way to be "literate" in programming!
[[../img/0_books.png]]

(You can find a [[https://github.com/birkenkrahe/cc/blob/piHome/pdf/first_org_print.pdf][PDF of this exercise]] on GitHub)

Objectives:
- Understand the "literate programming concept"
- Find Python on your computer
- Find Python for download to your PC on the web
- Options for creating and running Python scripts 
- Understand when we're using Colab + IDLE + replit.com
- Starting and using Google Colab, IDLE and replit.com
- Creating and running our first ever Python script
  
* Glossary

| TERM                  | MEANING                                       |
|-----------------------+-----------------------------------------------|
| Meta data             | Data about data (e.g. layout instructions)    |
| Infrastructure        | Computing roadworks: hardware and software    |
| Editor                | Program to write programs in                  |
| Compiler              | Program to turn source into machine code      |
| Python                | High-level, procedural, OOP language          |
| Source code           | Code for humans to read and edit (~.c~)         |
| Machine code          | Code for machines to execute (~.exe~)           |
| [[https://en.wikipedia.org/wiki/Git][Git]] (as in GitHub)    | Software version control system (2005)        |
| [[https://www.gnu.org/software/emacs/][Emacs]]                 | Extensible editor written in Lisp (1985)      |
| FOSS                  | Free and Open Source Software                 |
| IDLE                  | IDE bundled with Python
| [[https://en.wikipedia.org/wiki/Linux][Linux]]                 | FOSS operating system (1991)                  |
| Windows, MacOS        | Commercial OS (Microsoft, Apple)              |
| Command line          | Terminal, shell program to talk to the OS     |
| Prompt                | Location on your computer, e.g. ~C:\User\~      |
| ~cd~                    | Command to change directory                   |
| Literate pgm          | Doc + code + output for humans and machines   |

* References

- King K N (2008). C Programming - A Modern Approach. Norton.

